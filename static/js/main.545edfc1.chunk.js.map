{"version":3,"sources":["Header.js","InputTodo.js","TodoItem.js","TodosList.js","TodoContainer.js","index.js","component/TodoItem.module.css"],"names":["Header","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","props","useState","title","setTitle","onSubmit","e","preventDefault","trim","addTodoProps","alert","className","type","placeholder","value","name","onChange","target","TodoItem","editing","setEditing","todo","completed","id","viewMode","editMode","display","useEffect","console","log","styles","item","onDoubleClick","checkbox","checked","handleChangeProps","onClick","deleteTodoProps","fontStyle","opacity","textDecoration","textInput","setUpdate","onKeyDown","event","key","TodosList","todos","map","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.545edfc1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  const headerStyle = {\n    padding: '20px 0',\n    lineHeight: '1.5em',\n  };\n  return (\n    <header style={headerStyle}>\n      <h1 style={{\n        fontSize: '6rem',\n        fontWeight: '600',\n        marginBottom: '2rem',\n        lineHeight: '1em',\n        color: '#ececec',\n        textTransform: 'lowercase',\n        textAlign: 'center',\n      }}\n      >\n        Todos\n      </h1>\n    </header>\n  );\n};\nexport default Header;\n","/* eslint-disable no-alert */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\n\nconst InputTodo = (props) => {\n  const [title, setTitle] = useState('');\n\n  const onChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title.trim()) {\n      // eslint-disable-next-line react/prop-types\n      props.addTodoProps(title);\n      setTitle('');\n    } else {\n      alert('Please write item');\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        <input\n          type=\"text\"\n          className=\"input-text\"\n          placeholder=\"Add first name\"\n          value={title}\n          name=\"title\"\n          onChange={onChange}\n        />\n        <button type=\"submit\" className=\"input-submit\">Submit</button>\n      </form>\n    </>\n  );\n};\n\nexport default InputTodo;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport React, { useState, useEffect } from 'react';\nimport styles from './component/TodoItem.module.css';\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false);\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === 'Enter') {\n      setEditing(false);\n    }\n  };\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#595959',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n\n  const { completed, id, title } = props.todo;\n\n  const viewMode = {};\n  const editMode = {};\n\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  useEffect(() => () => {\n    // eslint-disable-next-line no-console\n    console.log('Cleaning up...');\n  }, []);\n\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox}\n          checked={completed}\n          onChange={() => props.handleChangeProps(id)}\n        />\n        <button type=\"submit\" onClick={() => props.deleteTodoProps(id)}>Delete</button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        className={styles.textInput}\n        value={title}\n        onChange={(e) => {\n          props.setUpdate(e.target.value, id);\n        }}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n};\n\nexport default TodoItem;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodosList = (props) => (\n  <ul>\n    {props.todos.map((todo) => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        handleChangeProps={props.handleChangeProps}\n        deleteTodoProps={props.deleteTodoProps}\n        setUpdate={props.setUpdate}\n      />\n    ))}\n  </ul>\n);\nexport default TodosList;\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport TodosList from './TodosList';\nimport './App.css';\n\nconst TodoContainer = () => {\n  // eslint-disable-next-line no-use-before-define\n  const [todos, setTodos] = useState(getInitialTodos());\n\n  const handleChange = (id) => {\n    setTodos((prevState) => prevState.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n      return todo;\n    }));\n  };\n\n  const delTodo = (id) => {\n    setTodos([\n      ...todos.filter((todo) => todo.id !== id),\n    ]);\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title,\n      completed: false,\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          // eslint-disable-next-line no-param-reassign\n          todo.title = updatedTitle;\n        }\n        return todo;\n      }),\n    );\n  };\n\n  function getInitialTodos() {\n    // getting stored items\n    const temp = localStorage.getItem('todos');\n    const savedTodos = JSON.parse(temp);\n    return savedTodos || [];\n  }\n\n  useEffect(() => {\n    // storing todos items\n    const temp = JSON.stringify(todos);\n    localStorage.setItem('todos', temp);\n  }, [todos]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"inner\">\n        <Header />\n        <InputTodo addTodoProps={addTodoItem} />\n        <TodosList\n          todos={todos}\n          handleChangeProps={handleChange}\n          deleteTodoProps={delTodo}\n          setUpdate={setUpdate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoContainer from './TodoContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__oGn2o\",\"checkbox\":\"TodoItem_checkbox__2wNdn\",\"textInput\":\"TodoItem_textInput__LMvVd\"};"],"sourceRoot":""}